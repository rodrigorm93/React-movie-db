{"version":3,"sources":["helpers/API.js","hooks/useFetch.js","components/UserContext.js","components/LoginScreen/LoginScreen.js","components/CarouselsApp/CarouselsApp.js","components/ModalVideo/ModalVideo.js","components/ModalVideo/RenderVideo.js","components/ModalOverview/ModalOverview.js","components/ListMovieTV/MovieTVCard.js","components/ListMovieTV/ListMovieTV.js","Pages/home.js","Pages/upcomingMovie.js","Pages/topRatedTV.js","Pages/populartv.js","Pages/PopularMovie.js","components/MenuTop/MenuTop.js","components/DetailMovieTV/DetailMovieTV.js","components/Search/Search.js","hooks/useForm.js","components/routers/DashboardRouter.js","components/routers/AppRouter.js","MovieApp.js","index.js"],"names":["URL_API","API","backdropPath","useFetch","url","isMounted","useRef","useState","data","loading","error","state","setstate","useEffect","fetch","then","resp","json","current","console","log","catch","UserContext","createContext","LoginScreen","className","onClick","CarouselsApp","results","Carousel","map","now_playing","Item","key","id","src","backdrop_path","alt","Caption","title","overview","to","ModalVideo","videoKey","isOpen","close","urlVideo","setUrlVideo","visible","centered","onCancel","footer","playing","controls","RenderVideo","videoMovie","length","videoPlatform","site","onOk","Alert","variant","renderVideoFunction","ModalOverview","modalOverview","isCloseModalOverview","infoMovie","name","Meta","Card","MovieTVCard","lists","setKeyVideo","category","setmodalOverview","modalVideo","setModalVideo","setInfoMovie","isOpenModalOverview","hoverable","style","width","cover","id_video","description","substring","release_date","allowHalf","defaultValue","vote_average","count","disabled","ListMovieTV","list","span","Home","pageTopRated","useContext","keyVideo","urlTopRated","dataTopRate","loadingTopRated","TopRated","url_video","Spinner","animation","role","UpcomingMovie","pagination","urlUpcoming","TopRatedTV","PopularTV","PopularMovie","SubMenu","Menu","MenuTop","setPageTopRated","total_pages_topRates","setpagination","total_pages_upcoming","total_pages_top_tv","total_popular_tv","reiniciarPagination","total_pagination","theme","mode","defaultSelectedKeys","lineHeight","icon","HomeOutlined","VideoCameraOutlined","ItemGroup","exact","activeClassName","SearchOutlined","LoginOutlined","DetailMovieTV","modalDetailVideo","setModalDetailVideo","modalDetailVideoEs","setModalDetailVideoEs","movieTvId","useParams","url_video_esp","Img","ImgOverlay","Title","original_title","Text","production_countries","homepage","href","strokeColor","type","percent","PlayCircleOutlined","Search","history","location","useLocation","movieList","setMovieList","envio","setenvio","queryString","parse","search","q","initialState","values","setValues","reset","handleInputChange","target","value","useForm","searchText","formValues","a","response","movies","offset","onSubmit","e","preventDefault","push","placeholder","autoComplete","onChange","Button","DashboardRouter","Header","Layout","total_pages","dataUpcoming","urlTopRatedTV","dataTopRatedTV","urlPopularTV","dataPopularTV","zIndex","path","component","AppRouter","MovieApp","Content","Footer","Provider","defaultCurrent","total","defaultPageSize","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c59c5099.chunk.js","sourcesContent":["export const URL_API = \"https://api.themoviedb.org/3\";\r\nexport const API = \"0833fefae38662aa3688515b756c9a47\";\r\nexport const backdropPath = `https://image.tmdb.org/t/p/original`;\r\n","import { useEffect, useState, useRef } from \"react\";\r\n\r\nexport const useFetch = (url) => {\r\n  const isMounted = useRef(true); //es para hacer la referencia cuando el componente esta vivo o sigue mosntado\r\n  const [state, setstate] = useState({\r\n    data: null,\r\n    loading: true,\r\n    error: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setstate({ data: null, loading: true, error: null });\r\n    fetch(url)\r\n      .then((resp) => resp.json())\r\n      .then((data) => {\r\n        if (isMounted.current) {\r\n          setstate({\r\n            loading: false,\r\n            error: false,\r\n            data,\r\n          });\r\n        } else {\r\n          console.log(\"Setstate no se llamo\");\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setstate({\r\n          loading: false,\r\n          error: \"No se pudo cargar la info\",\r\n          data: null,\r\n        });\r\n      });\r\n  }, [url]);\r\n\r\n  return state;\r\n};\r\n","import { createContext } from \"react\";\r\n\r\nexport const UserContext = createContext(null);\r\n","import React from \"react\";\r\n\r\nexport const LoginScreen = () => {\r\n  const handleLogin = () => {\r\n    console.log(\"Login\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Login</h1>\r\n      <hr />\r\n\r\n      <button className=\"btn btn-primary\" onClick={handleLogin}>\r\n        Login\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Carousel } from \"react-bootstrap\";\r\n\r\nimport \"./CarouselsApp.scss\";\r\nimport { backdropPath } from \"../../helpers/API\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const CarouselsApp = ({ results }) => {\r\n  return (\r\n    <Carousel className=\"carousels-app\">\r\n      {results.map((now_playing) => (\r\n        <Carousel.Item key={now_playing.id}>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src={`${backdropPath}${now_playing.backdrop_path}`}\r\n            alt={now_playing.id}\r\n          />\r\n          <Carousel.Caption>\r\n            <h3>{now_playing.title}</h3>\r\n            <p>{now_playing.overview}</p>\r\n\r\n            <Link to={`./movieTv/${now_playing.id}`}>\r\n              <h4 className=\"link-description\">Descripción</h4>\r\n            </Link>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n      ))}\r\n    </Carousel>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Modal } from \"antd\";\r\nimport ReactPlayer from \"react-player\";\r\nimport \"./ModalVid.scss\";\r\n\r\nexport function ModalVideo({ videoKey, isOpen, close }) {\r\n  //isOpen =es el estado del modal si esta abierto o cerrado\r\n\r\n  const [urlVideo, setUrlVideo] = useState(null);\r\n  // <Player autoPlay={isOpen} player={isOpen} src={urlVideo} />\r\n  useEffect(() => {\r\n    setUrlVideo(`https://youtu.be/${videoKey}`);\r\n  }, [videoKey]); // DE LAS VARIABLES QUE SE VAN A EJECUTAR SE HARA QUE EL USEEFECT SE VUELVA A EJECUTAR, si alguna de\r\n  //esas dos variables sufre un cambio el useEffect se actualizara\r\n\r\n  return (\r\n    <Modal\r\n      className=\"modal-video\"\r\n      visible={isOpen}\r\n      centered\r\n      onCancel={close}\r\n      footer={false}\r\n    >\r\n      <ReactPlayer url={urlVideo} playing={isOpen} controls={isOpen} />\r\n    </Modal>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\n\r\nimport { Modal } from \"antd\";\r\nimport { ModalVideo } from \"./ModalVideo\";\r\nimport { Alert } from \"react-bootstrap\";\r\nexport const RenderVideo = ({ isOpen, close, url }) => {\r\n  const { data: videoMovie, loading } = useFetch(url);\r\n  const { results } = !!videoMovie && videoMovie;\r\n\r\n  const renderVideoFunction = (results, isOpen, close) => {\r\n    if (results) {\r\n      if (results.length > 0) {\r\n        return (\r\n          <>\r\n            <ModalVideo\r\n              videoKey={results[0].key}\r\n              videoPlatform={results[0].site}\r\n              isOpen={isOpen}\r\n              close={close}\r\n            />\r\n          </>\r\n        );\r\n      } else {\r\n        return (\r\n          <>\r\n            <Modal centered visible={isOpen} onCancel={close} onOk={close}>\r\n              <Alert variant=\"danger\">Trailer no Disponible</Alert>\r\n            </Modal>\r\n          </>\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <div></div>\r\n      ) : (\r\n        <div>{renderVideoFunction(results, isOpen, close)}</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Modal } from \"antd\";\r\n\r\nimport \"./ModalOverview.scss\";\r\nexport const ModalOverview = ({\r\n  modalOverview,\r\n  isCloseModalOverview,\r\n  infoMovie,\r\n}) => {\r\n  return (\r\n    <Modal\r\n      className=\"modal-over\"\r\n      visible={modalOverview}\r\n      centered\r\n      onCancel={isCloseModalOverview}\r\n      footer={false}\r\n    >\r\n      <h3>{infoMovie?.title}</h3>\r\n      <h3>{infoMovie?.name}</h3>\r\n\r\n      <p>{infoMovie.overview}</p>\r\n    </Modal>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Card, Rate, Button } from \"antd\";\r\nimport { backdropPath } from \"../../helpers/API\";\r\nimport { RenderVideo } from \"../ModalVideo/RenderVideo\";\r\nimport { ModalOverview } from \"../ModalOverview/ModalOverview\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst { Meta } = Card;\r\nexport const MovieTVCard = ({ lists, setKeyVideo, url, category }) => {\r\n  const [modalOverview, setmodalOverview] = useState(false);\r\n  const [modalVideo, setModalVideo] = useState(false);\r\n\r\n  const [infoMovie, setInfoMovie] = useState({\r\n    title: \"\",\r\n    overview: \"\",\r\n  });\r\n\r\n  const getKeyVideo = (id_video) => {\r\n    setKeyVideo(id_video);\r\n    setModalVideo(true);\r\n  };\r\n\r\n  const isCloseModalOverview = () => {\r\n    setmodalOverview(false);\r\n  };\r\n  const isOpenModalOverview = (title, overview) => {\r\n    setInfoMovie({\r\n      title,\r\n      overview,\r\n    });\r\n    setmodalOverview(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card\r\n        className=\"card-list animate__animated animate__fadeIn\"\r\n        hoverable\r\n        style={{ width: 300 }}\r\n        cover={\r\n          <img\r\n            alt=\"example\"\r\n            src={`${backdropPath}${lists.backdrop_path}`}\r\n            onClick={() => getKeyVideo(lists.id)}\r\n          />\r\n        }\r\n      >\r\n        {lists.title ? (\r\n          <>\r\n            <Meta\r\n              title={lists.title}\r\n              description={lists.overview.substring(0, 50) + \"...\"}\r\n            />\r\n\r\n            {category ? (\r\n              <Link to={`./movieTv/${lists.id}`}>Más...</Link>\r\n            ) : (\r\n              <div></div>\r\n            )}\r\n            <br />\r\n            <center>\r\n              <Button\r\n                onClick={() => isOpenModalOverview(lists.title, lists.overview)}\r\n                className=\"text-center\"\r\n                variant=\"light\"\r\n              >\r\n                Overview\r\n              </Button>\r\n            </center>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Meta\r\n              title={lists.name}\r\n              description={lists.overview.substring(0, 150) + \"...\"}\r\n            />\r\n\r\n            <br />\r\n            <center>\r\n              <Button\r\n                onClick={() => isOpenModalOverview(lists.name, lists.overview)}\r\n                className=\"text-center\"\r\n                variant=\"light\"\r\n              >\r\n                Overview\r\n              </Button>\r\n            </center>\r\n          </>\r\n        )}\r\n\r\n        <hr />\r\n\r\n        <p className=\"text-center\">{lists.release_date}</p>\r\n        <Rate allowHalf defaultValue={lists.vote_average} count={10} disabled />\r\n      </Card>\r\n\r\n      <ModalOverview\r\n        modalOverview={modalOverview}\r\n        isCloseModalOverview={isCloseModalOverview}\r\n        infoMovie={infoMovie}\r\n      />\r\n\r\n      <RenderVideo\r\n        isOpen={modalVideo}\r\n        close={() => setModalVideo(false)}\r\n        url={url}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Row, Col } from \"antd\"; //para armar las filas y columnas\r\n\r\nimport \"./ListMovieTV.scss\";\r\nimport { MovieTVCard } from \"./MovieTVCard\";\r\n\r\nexport const ListMovieTV = ({ list, url, setKeyVideo, category }) => {\r\n  return (\r\n    <div className=\"box-card-list\">\r\n      <Row>\r\n        {list.map((lists) => (\r\n          <Col span={6} key={lists.id} className=\"card-list-colum\">\r\n            <MovieTVCard\r\n              lists={lists}\r\n              setKeyVideo={setKeyVideo}\r\n              url={url}\r\n              category={category}\r\n            />\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport { CarouselsApp } from \"../components/CarouselsApp/CarouselsApp\";\r\nimport { useFetch } from \"../hooks/useFetch\";\r\nimport { URL_API, API } from \"../helpers/API\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { ListMovieTV } from \"../components/ListMovieTV/ListMovieTV\";\r\n\r\nimport \"./styles.scss\";\r\nimport { UserContext } from \"../components/UserContext\";\r\nexport const Home = ({ category }) => {\r\n  const { pageTopRated } = useContext(UserContext); //sacmaos la pagina en la que vamos en la navegacion\r\n\r\n  const [keyVideo, setKeyVideo] = useState(\"55\");\r\n\r\n  //Ultimos estrenos para carousel\r\n\r\n  const url = `${URL_API}/movie/now_playing?api_key=${API}&language=es-ES&page=1`;\r\n  const { data, loading } = useFetch(url);\r\n  const { results } = !!data && data;\r\n\r\n  //lista de top peliculas\r\n\r\n  const urlTopRated = `${URL_API}/movie/top_rated?api_key=${API}&language=es-Es&page=${pageTopRated}`;\r\n  const { data: dataTopRate, loading: loadingTopRated } = useFetch(urlTopRated);\r\n\r\n  const { results: TopRated } = !!dataTopRate && dataTopRate;\r\n\r\n  const url_video = `${URL_API}/movie/${keyVideo}/videos?api_key=${API}&language=en-US`;\r\n\r\n  return (\r\n    <>\r\n      {loading ? <h1>loafding</h1> : <CarouselsApp results={results} />}\r\n\r\n      {loadingTopRated ? (\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n      ) : (\r\n        <>\r\n          <h1 className=\"text-center\">Top Rated</h1>\r\n          <br />\r\n          <ListMovieTV\r\n            list={TopRated}\r\n            url={url_video}\r\n            setKeyVideo={setKeyVideo}\r\n            category={category}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport { URL_API, API } from \"../helpers/API\";\r\nimport { useFetch } from \"../hooks/useFetch\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { ListMovieTV } from \"../components/ListMovieTV/ListMovieTV\";\r\n\r\nimport \"./styles.scss\";\r\nimport { UserContext } from \"../components/UserContext\";\r\nexport const UpcomingMovie = ({ category }) => {\r\n  const { pageTopRated: pagination } = useContext(UserContext);\r\n\r\n  const [keyVideo, setKeyVideo] = useState(\"55\");\r\n\r\n  const urlUpcoming = `${URL_API}/movie/upcoming?api_key=${API}&language=es-ES&page=${pagination}`;\r\n  const { data, loading } = useFetch(urlUpcoming);\r\n  const { results } = !!data && data;\r\n\r\n  const url_video = `${URL_API}/movie/${keyVideo}/videos?api_key=${API}&language=en-US`;\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n      ) : (\r\n        <>\r\n          <h1 className=\"text-center\">upcoming</h1>\r\n          <br />\r\n          <ListMovieTV\r\n            list={results}\r\n            url={url_video}\r\n            setKeyVideo={setKeyVideo}\r\n            category={category}\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport { URL_API, API } from \"../helpers/API\";\r\nimport { useFetch } from \"../hooks/useFetch\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { ListMovieTV } from \"../components/ListMovieTV/ListMovieTV\";\r\n\r\nimport \"./styles.scss\";\r\nimport { UserContext } from \"../components/UserContext\";\r\nexport const TopRatedTV = ({ category }) => {\r\n  const { pageTopRated: pagination } = useContext(UserContext);\r\n  const [keyVideo, setKeyVideo] = useState(\"55\");\r\n\r\n  const url = `${URL_API}/tv/top_rated?api_key=${API}&language=es-ES&page=${pagination}`;\r\n  const url_video = `${URL_API}/tv/${keyVideo}/videos?api_key=${API}&language=en-US`;\r\n\r\n  const { data, loading } = useFetch(url);\r\n  const { results } = !!data && data;\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n      ) : (\r\n        <>\r\n          <h1 className=\"text-center\">Top rated</h1>\r\n          <ListMovieTV\r\n            list={results}\r\n            url={url_video}\r\n            setKeyVideo={setKeyVideo}\r\n            category={category}\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport { URL_API, API } from \"../helpers/API\";\r\nimport { useFetch } from \"../hooks/useFetch\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { ListMovieTV } from \"../components/ListMovieTV/ListMovieTV\";\r\nimport \"./styles.scss\";\r\nimport { UserContext } from \"../components/UserContext\";\r\nexport const PopularTV = () => {\r\n  const { pageTopRated: pagination } = useContext(UserContext);\r\n\r\n  const [keyVideo, setKeyVideo] = useState(\"55\");\r\n\r\n  const url_video = `${URL_API}/tv/${keyVideo}/videos?api_key=${API}&language=en-US`;\r\n\r\n  const url = `${URL_API}/tv/popular?api_key=${API}&language=es-ES&page=${pagination}`;\r\n  const { data, loading } = useFetch(url);\r\n  const { results } = !!data && data;\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n      ) : (\r\n        <>\r\n          <h1 className=\"text-center\">popular</h1>\r\n          <ListMovieTV\r\n            list={results}\r\n            url={url_video}\r\n            setKeyVideo={setKeyVideo}\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport { URL_API, API } from \"../helpers/API\";\r\nimport { useFetch } from \"../hooks/useFetch\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { ListMovieTV } from \"../components/ListMovieTV/ListMovieTV\";\r\n\r\nimport { UserContext } from \"../components/UserContext\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nexport const PopularMovie = ({ category }) => {\r\n  const [keyVideo, setKeyVideo] = useState(\"55\");\r\n  const { pageTopRated: pagination } = useContext(UserContext);\r\n\r\n  const url_video = `${URL_API}/movie/${keyVideo}/videos?api_key=${API}&language=en-US`;\r\n\r\n  const url = `${URL_API}/movie/popular?api_key=${API}&language=es-ES&page=${pagination}`;\r\n  const { data, loading } = useFetch(url);\r\n  const { results } = !!data && data;\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n      ) : (\r\n        <>\r\n          <h1 className=\"text-center\">popular</h1>\r\n          <ListMovieTV\r\n            list={results}\r\n            url={url_video}\r\n            setKeyVideo={setKeyVideo}\r\n            category={category}\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Menu } from \"antd\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport {\r\n  VideoCameraOutlined,\r\n  HomeOutlined,\r\n  SearchOutlined,\r\n  LoginOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nimport \"./MenuTop.scss\";\r\nconst { SubMenu } = Menu;\r\n\r\nexport const MenuTop = ({\r\n  setPageTopRated,\r\n  total_pages_topRates,\r\n  setpagination,\r\n  total_pages_upcoming,\r\n  total_pages_top_tv,\r\n  total_popular_tv,\r\n}) => {\r\n  const reiniciarPagination = (total_pagination) => {\r\n    setPageTopRated(1);\r\n    setpagination(total_pagination);\r\n  };\r\n\r\n  return (\r\n    <div className=\"menu-top\">\r\n      <div className=\"menu-top__logo\"></div>\r\n\r\n      <Menu\r\n        theme=\"dark\"\r\n        mode=\"horizontal\"\r\n        defaultSelectedKeys={[\"1\"]}\r\n        style={{ lineHeight: \"64px\" }}\r\n      >\r\n        <Menu.Item key=\"app\" icon={<HomeOutlined />}>\r\n          <Link\r\n            to=\"/home\"\r\n            onClick={() => reiniciarPagination(total_pages_topRates)}\r\n          >\r\n            MovieDB\r\n          </Link>\r\n        </Menu.Item>\r\n\r\n        <SubMenu icon={<VideoCameraOutlined />} title=\"Movie\">\r\n          <Menu.ItemGroup title=\"Category\">\r\n            <Menu.Item\r\n              key=\"1\"\r\n              onClick={() => reiniciarPagination(total_pages_topRates)}\r\n            >\r\n              <NavLink exact activeClassName=\"active\" to=\"/home\">\r\n                Top Rated\r\n              </NavLink>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"2\"\r\n              onClick={() => reiniciarPagination(total_pages_upcoming)}\r\n            >\r\n              <NavLink exact activeClassName=\"active\" to=\"/upcomingMovie\">\r\n                Upcoming\r\n              </NavLink>\r\n            </Menu.Item>\r\n\r\n            <Menu.Item\r\n              key=\"3\"\r\n              onClick={() => reiniciarPagination(total_pages_upcoming)}\r\n            >\r\n              <NavLink exact activeClassName=\"active\" to=\"/PopularMovie\">\r\n                Popular\r\n              </NavLink>\r\n            </Menu.Item>\r\n          </Menu.ItemGroup>\r\n        </SubMenu>\r\n\r\n        <SubMenu icon={<VideoCameraOutlined />} title=\"TV\">\r\n          <Menu.ItemGroup title=\"Category\">\r\n            <Menu.Item\r\n              key=\"4\"\r\n              onClick={() => reiniciarPagination(total_pages_top_tv)}\r\n            >\r\n              <NavLink exact activeClassName=\"active\" to=\"/topRatedTV\">\r\n                Top Rated\r\n              </NavLink>\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"5\"\r\n              onClick={() => reiniciarPagination(total_popular_tv)}\r\n            >\r\n              <NavLink exact activeClassName=\"active\" to=\"/popularTV\">\r\n                Popular\r\n              </NavLink>\r\n            </Menu.Item>\r\n          </Menu.ItemGroup>\r\n        </SubMenu>\r\n\r\n        <Menu.Item key=\"search\" icon={<SearchOutlined />}>\r\n          <Link to=\"/search\">Search</Link>\r\n        </Menu.Item>\r\n\r\n        <Menu.Item key=\"login\" icon={<LoginOutlined />}>\r\n          <Link to=\"/login\">Login</Link>\r\n        </Menu.Item>\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { UserContext } from \"../UserContext\";\r\nimport { URL_API, API, backdropPath } from \"../../helpers/API\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\nimport { Spinner, Card } from \"react-bootstrap\";\r\nimport { RenderVideo } from \"../ModalVideo/RenderVideo\";\r\nimport { Button, Progress } from \"antd\";\r\nimport { PlayCircleOutlined } from \"@ant-design/icons\";\r\n\r\nimport \"./DetailMovieTV.scss\";\r\n\r\nexport const DetailMovieTV = () => {\r\n  const { setpagination } = useContext(UserContext); //le asigamos nuestro componente usercontext para buscar todo lo que tenga adentro\r\n  const [modalDetailVideo, setModalDetailVideo] = useState(false);\r\n  const [modalDetailVideoEs, setModalDetailVideoEs] = useState(false);\r\n\r\n  const { movieTvId } = useParams();\r\n\r\n  const url = `${URL_API}/movie/${movieTvId}?api_key=${API}&language=es-ES`;\r\n  const { data, loading } = useFetch(url);\r\n  const results = !!data && data;\r\n\r\n  const url_video = `${URL_API}/movie/${movieTvId}/videos?api_key=${API}&language=en-US`;\r\n\r\n  const url_video_esp = `${URL_API}/movie/${movieTvId}/videos?api_key=${API}&language=es-ES`;\r\n\r\n  useEffect(() => {\r\n    setpagination(0);\r\n  });\r\n  //console.log(results);\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n      ) : (\r\n        <>\r\n          <Card className=\"bg-dark text-white animate__animated animate__pulse\">\r\n            <Card.Img\r\n              className=\"img_poster\"\r\n              src={`${backdropPath}${results.backdrop_path}`}\r\n              alt=\"Card image\"\r\n            />\r\n\r\n            <Card.ImgOverlay>\r\n              <Card.Title>{results.original_title}</Card.Title>\r\n\r\n              {results.title && <Card.Text>{results.title}</Card.Text>}\r\n\r\n              <Card.Text>{results.overview}</Card.Text>\r\n              {results.production_countries.length > 0 && (\r\n                <Card.Text>\r\n                  Producción: {results.production_countries[0].name}\r\n                </Card.Text>\r\n              )}\r\n\r\n              {results.homepage && (\r\n                <Card.Text>{<a href={results.homepage}>homepage</a>}</Card.Text>\r\n              )}\r\n\r\n              <Progress\r\n                className=\"text-color\"\r\n                strokeColor={{\r\n                  \"0%\": \"#108ee9\",\r\n                  \"100%\": \"#87d068\",\r\n                }}\r\n                width={80}\r\n                type=\"circle\"\r\n                percent={results.vote_average * 10}\r\n              />\r\n\r\n              <Card.Text>\r\n                <Button\r\n                  className=\"btn_play\"\r\n                  onClick={() => setModalDetailVideo(true)}\r\n                  icon={<PlayCircleOutlined />}\r\n                >\r\n                  Ver Trailer\r\n                </Button>\r\n\r\n                <Button\r\n                  className=\"btn_play\"\r\n                  onClick={() => setModalDetailVideoEs(true)}\r\n                  icon={<PlayCircleOutlined />}\r\n                >\r\n                  Ver Trailer (Español)\r\n                </Button>\r\n              </Card.Text>\r\n            </Card.ImgOverlay>\r\n          </Card>\r\n          <RenderVideo\r\n            isOpen={modalDetailVideo}\r\n            close={() => setModalDetailVideo(false)}\r\n            url={url_video}\r\n          />\r\n\r\n          <RenderVideo\r\n            isOpen={modalDetailVideoEs}\r\n            close={() => setModalDetailVideoEs(false)}\r\n            url={url_video_esp}\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Row, Col, Input } from \"antd\";\r\nimport queryString from \"query-string\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { URL_API, API } from \"../../helpers/API\";\r\nimport { ListMovieTV } from \"../ListMovieTV/ListMovieTV\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\n\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nimport \"./Search.scss\";\r\nimport { UserContext } from \"../UserContext\";\r\n//import { useFetch } from \"../../hooks/useFetch\";\r\n\r\nexport const Search = ({ history }) => {\r\n  const { setpagination } = useContext(UserContext); //sacmaos la pagina en la que vamos en la navegacion\r\n\r\n  const location = useLocation(); // para obenter la url de busqueda\r\n  const [movieList, setMovieList] = useState([]);\r\n\r\n  const [envio, setenvio] = useState(false);\r\n\r\n  const { q = \"\" } = queryString.parse(location.search); //separamos la q de la palbara escrita, si es vacio igualamos el q a un string vacio\r\n\r\n  const [formValues, handleInputChange, reset] = useForm({\r\n    searchText: q, // se lo establecmeos al valor inicial del formulario\r\n  });\r\n\r\n  const [keyVideo, setKeyVideo] = useState(\"55\");\r\n\r\n  const { searchText } = formValues;\r\n\r\n  const url_video = `${URL_API}/movie/${keyVideo}/videos?api_key=${API}&language=en-US`;\r\n\r\n  //const url = `${URL_API}/search/movie/?api_key=${API}&language=es-Es&query=${searchText}&page=1`;\r\n  //const { data } = useFetch(url);\r\n  //const { results } = !!data && data;\r\n\r\n  //realizamos al busqueda cada vez que enviemos el formulario:\r\n  useEffect(() => {\r\n    (async () => {\r\n      //const searchValue = queryString.parseUrl(location.search); //devuelve {url: \"\", query: {…}} y dentro en s esta el nombre de la peli\r\n      // const { s } = searchValue.query; //s tiene el nombre de la pelicula que escriba\r\n      //vamos hacer la peticion http\r\n      const response = await fetch(\r\n        `${URL_API}/search/movie/?api_key=${API}&language=es-Es&query=${q}&page=1`\r\n      );\r\n      const movies = await response.json(); //tranformamos a json para ver el resuwltado\r\n\r\n      setMovieList(movies.results); //ahora guardamos el resultado en un estado\r\n      setenvio(false);\r\n      setpagination(0);\r\n    })();\r\n  }, [envio]);\r\n\r\n  const handleSearch = (e) => {\r\n    e.preventDefault();\r\n    history.push(`?q=${searchText}`);\r\n\r\n    reset(); //borramos todos el contenido del input\r\n    setenvio(true);\r\n  };\r\n  //<Button type=\"submit\" variant=\"light\">\r\n  //        Buscar\r\n  //      </Button>\r\n  return (\r\n    <Row>\r\n      <Col span={9} offset={6} className=\"search\">\r\n        <form onSubmit={handleSearch}>\r\n          <h1>Busca tu película</h1>\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"find\"\r\n            name=\"searchText\"\r\n            autoComplete=\"off\"\r\n            value={searchText}\r\n            onChange={handleInputChange}\r\n          />\r\n          <Button type=\"submit\" variant=\"light\">\r\n            Buscar\r\n          </Button>\r\n        </form>\r\n      </Col>\r\n\r\n      <Row>\r\n        {movieList && (\r\n          <>\r\n            <h1 className=\"text-center\">Resultados:</h1>\r\n            <br />\r\n            <ListMovieTV\r\n              list={movieList}\r\n              url={url_video}\r\n              setKeyVideo={setKeyVideo}\r\n              category=\"movie\"\r\n            />\r\n          </>\r\n        )}\r\n      </Row>\r\n    </Row>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = (initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const reset = () => {\r\n    setValues(\"\");\r\n  };\r\n\r\n  const handleInputChange = ({ target }) => {\r\n    setValues({\r\n      ...values,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  return [values, handleInputChange, reset];\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { Layout } from \"antd\";\r\n\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\nimport { Home } from \"../../Pages/home\";\r\nimport { UpcomingMovie } from \"../../Pages/upcomingMovie\";\r\nimport { TopRatedTV } from \"../../Pages/topRatedTV\";\r\nimport { PopularTV } from \"../../Pages/populartv\";\r\nimport { PopularMovie } from \"../../Pages/PopularMovie\";\r\nimport { MenuTop } from \"../MenuTop/MenuTop\";\r\nimport { UserContext } from \"../UserContext\";\r\nimport { URL_API, API } from \"../../helpers/API\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\nimport { DetailMovieTV } from \"../DetailMovieTV/DetailMovieTV\";\r\nimport { Search } from \"../Search/Search\";\r\n\r\nexport const DashboardRouter = () => {\r\n  const { Header } = Layout;\r\n\r\n  const { setPageTopRated, setpagination } = useContext(UserContext); //le asigamos nuestro componente usercontext para buscar todo lo que tenga adentro\r\n\r\n  const url = `${URL_API}/movie/top_rated?api_key=${API}&language=es-Es&page=1`;\r\n  const { data } = useFetch(url);\r\n  const { total_pages: total_pages_topRates } = !!data && data;\r\n\r\n  const urlUpcoming = `${URL_API}/movie/upcoming?api_key=${API}&language=es-ES&page=1`;\r\n  const { data: dataUpcoming } = useFetch(urlUpcoming);\r\n  const { total_pages: total_pages_upcoming } = !!dataUpcoming && dataUpcoming;\r\n\r\n  const urlTopRatedTV = `${URL_API}/tv/top_rated?api_key=${API}&language=es-ES&page=1`;\r\n  const { data: dataTopRatedTV } = useFetch(urlTopRatedTV);\r\n  const { total_pages: total_pages_top_tv } =\r\n    !!dataTopRatedTV && dataTopRatedTV;\r\n\r\n  const urlPopularTV = `${URL_API}/tv/popular?api_key=${API}&language=es-ES&page=1`;\r\n  const { data: dataPopularTV } = useFetch(urlPopularTV);\r\n  const { total_pages: total_popular_tv } = !!dataPopularTV && dataPopularTV;\r\n\r\n  return (\r\n    <>\r\n      <Header style={{ zIndex: 1 }}>\r\n        <MenuTop\r\n          setPageTopRated={setPageTopRated}\r\n          setpagination={setpagination}\r\n          total_pages_topRates={total_pages_topRates}\r\n          total_pages_upcoming={total_pages_upcoming}\r\n          total_pages_top_tv={total_pages_top_tv}\r\n          total_popular_tv={total_popular_tv}\r\n        />\r\n      </Header>\r\n\r\n      <div>\r\n        <Switch>\r\n          <Route exact path=\"/home\">\r\n            <Home category={true} />\r\n          </Route>\r\n\r\n          <Route exact path=\"/movieTv/:movieTvId\" component={DetailMovieTV} />\r\n\r\n          <Route exact path=\"/search\" component={Search} />\r\n\r\n          <Route exact path=\"/upcomingMovie\">\r\n            <UpcomingMovie category={true} />\r\n          </Route>\r\n\r\n          <Route exact path=\"/topRatedTV\">\r\n            <TopRatedTV category={false} />\r\n          </Route>\r\n\r\n          <Route exact path=\"/PopularMovie\">\r\n            <PopularMovie category={true} />\r\n          </Route>\r\n\r\n          <Route exact path=\"/popularTV\">\r\n            <PopularTV />\r\n          </Route>\r\n\r\n          <Redirect to=\"/home\" />\r\n        </Switch>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { LoginScreen } from \"../LoginScreen/LoginScreen\";\r\nimport { DashboardRouter } from \"./DashboardRouter\";\r\n\r\nexport const AppRouter = () => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/login\" component={LoginScreen} />\r\n        <Route path=\"/\" component={DashboardRouter} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\nimport { Layout } from \"antd\";\nimport { URL_API, API } from \"./helpers/API\";\nimport { useFetch } from \"./hooks/useFetch\";\nimport { UserContext } from \"./components/UserContext\";\nimport { AppRouter } from \"./components/routers/AppRouter\";\nimport { Pagination } from \"antd\";\n\nimport \"./MovieApp.scss\";\nfunction MovieApp() {\n  const { Content, Footer } = Layout;\n  const [pageTopRated, setPageTopRated] = useState(1); //contador de paginas, nos indica en que pagina vamos en la paginacion\n\n  const url = `${URL_API}/movie/top_rated?api_key=${API}&language=es-Es&page=1`;\n\n  const { data } = useFetch(url);\n  const { total_pages: total_pages_topRates } = !!data && data;\n\n  const [pagination, setpagination] = useState(1);\n\n  //carga las paginas totlaes del home que seria el top_rated\n  useEffect(() => {\n    setpagination(total_pages_topRates); //totoal de apginas\n  }, [total_pages_topRates]);\n  const onChange = (e) => {\n    setPageTopRated(e); //pagina actual\n  };\n\n  return (\n    <>\n      <Layout>\n        <Content>\n          <UserContext.Provider\n            value={{\n              pageTopRated,\n              setPageTopRated,\n              setpagination,\n            }}\n          >\n            <AppRouter />\n          </UserContext.Provider>\n        </Content>\n      </Layout>\n      <Footer>\n        <Pagination\n          onChange={onChange}\n          defaultCurrent={1}\n          total={pagination}\n          current={pageTopRated}\n          defaultPageSize={pagination}\n          className=\"footer\"\n        />\n      </Footer>\n    </>\n  );\n}\n\nexport default MovieApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport MovieApp from \"./MovieApp\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport \"antd/dist/antd.css\"; // or 'antd/dist/antd.less'\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <MovieApp />,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}