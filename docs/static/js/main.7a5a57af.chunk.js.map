{"version":3,"sources":["components/MenuTop/MenuTop.js","helpers/API.js","components/CarouselsApp/CarouselsApp.js","hooks/useFetch.js","components/ModalVideo/ModalVideo.js","components/ModalVideo/RenderVideo.js","components/ModalOverview/ModalOverview.js","components/ListMovieTV/ListMovieTV.js","Pages/home.js","Pages/topRatedTV.js","Pages/populartv.js","Pages/upcomingMovie.js","MovieApp.js","index.js"],"names":["SubMenu","Menu","MenuTop","setPageTopRated","total_pages_topRates","setpagination","total_pages_upcoming","total_pages_top_tv","total_popular_tv","className","theme","mode","defaultSelectedKeys","style","lineHeight","icon","SettingOutlined","title","ItemGroup","Item","key","onClick","to","URL_API","API","CarouselsApp","results","Carousel","map","now_playing","id","src","backdrop_path","alt","Caption","overview","useFetch","url","isMounted","useRef","useState","data","loading","error","state","setstate","useEffect","fetch","then","resp","json","current","console","log","catch","ModalVideo","videoKey","isOpen","close","urlVideo","setUrlVideo","visible","centered","onCancel","footer","playing","controls","RenderVideo","videoMovie","length","videoPlatform","site","onOk","Alert","variant","renderVideoFunction","ModalOverview","modalOverview","isCloseModalOverview","infoMovie","name","Meta","Card","ListMovieTV","list","setKeyVideo","modalVideo","setModalVideo","setmodalOverview","setInfoMovie","isOpenModalOverview","lists","span","hoverable","width","cover","id_video","description","substring","release_date","allowHalf","defaultValue","vote_average","count","disabled","Home","pageTopRated","keyVideo","urlTopRated","dataTopRate","loadingTopRated","TopRated","url_video","Spinner","animation","role","TopRatedTV","pagination","PopularTV","UpcomingMovie","urlUpcoming","MovieApp","Header","Layout","Content","total_pages","dataUpcoming","urlTopRatedTV","dataTopRatedTV","urlPopularTV","dataPopularTV","zIndex","path","exact","onChange","e","defaultCurrent","total","defaultPageSize","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7a5a57af.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Menu } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { SettingOutlined } from \"@ant-design/icons\";\r\n\r\nimport \"./MenuTop.scss\";\r\nconst { SubMenu } = Menu;\r\n\r\nexport const MenuTop = ({\r\n  setPageTopRated,\r\n  total_pages_topRates,\r\n  setpagination,\r\n  total_pages_upcoming,\r\n  total_pages_top_tv,\r\n  total_popular_tv,\r\n}) => {\r\n  const reiniciarPaginationTopRated = () => {\r\n    setPageTopRated(1);\r\n    setpagination(total_pages_topRates);\r\n  };\r\n\r\n  const reiniciarPaginationUpcoming = () => {\r\n    setPageTopRated(1);\r\n    setpagination(total_pages_upcoming);\r\n  };\r\n\r\n  const reiniciarPaginationTopRatedTV = () => {\r\n    setPageTopRated(1);\r\n    setpagination(total_pages_top_tv);\r\n  };\r\n\r\n  const reiniciarPaginationPopularTV = () => {\r\n    setPageTopRated(1);\r\n    setpagination(total_popular_tv);\r\n  };\r\n\r\n  return (\r\n    <div className=\"menu-top\">\r\n      <div className=\"menu-top__logo\"></div>\r\n\r\n      <Menu\r\n        theme=\"dark\"\r\n        mode=\"horizontal\"\r\n        defaultSelectedKeys={[\"1\"]}\r\n        style={{ lineHeight: \"64px\" }}\r\n      >\r\n        <SubMenu icon={<SettingOutlined />} title=\"Movie\">\r\n          <Menu.ItemGroup title=\"Category\">\r\n            <Menu.Item key=\"1\" onClick={reiniciarPaginationTopRated}>\r\n              <Link to=\"/\">Top Rated</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"2\" onClick={reiniciarPaginationUpcoming}>\r\n              <Link to=\"/upcomingMovie\">Upcoming</Link>\r\n            </Menu.Item>\r\n          </Menu.ItemGroup>\r\n        </SubMenu>\r\n\r\n        <SubMenu icon={<SettingOutlined />} title=\"TV\">\r\n          <Menu.ItemGroup title=\"Category\">\r\n            <Menu.Item key=\"1\" onClick={reiniciarPaginationTopRatedTV}>\r\n              <Link to=\"/topRatedTV\">Top Rated</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"2\" onClick={reiniciarPaginationPopularTV}>\r\n              <Link to=\"/popularTV\">Popular</Link>\r\n            </Menu.Item>\r\n          </Menu.ItemGroup>\r\n        </SubMenu>\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\n","export const URL_API = \"https://api.themoviedb.org/3\";\r\nexport const API = \"0833fefae38662aa3688515b756c9a47\";\r\nexport const backdropPath = `https://image.tmdb.org/t/p/original`;\r\n","import React from \"react\";\r\n\r\nimport { Carousel } from \"react-bootstrap\";\r\n\r\nimport \"./CarouselsApp.scss\";\r\nimport { backdropPath } from \"../../helpers/API\";\r\n\r\nexport const CarouselsApp = ({ results }) => {\r\n  //const [index, setIndex] = useState(0);\r\n\r\n  //const handleSelect = (selectedIndex, e) => {\r\n  //setIndex(selectedIndex);\r\n  // };\r\n\r\n  return (\r\n    <Carousel className=\"carousels-app\">\r\n      {results.map((now_playing) => (\r\n        <Carousel.Item key={now_playing.id}>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src={`${backdropPath}${now_playing.backdrop_path}`}\r\n            alt={now_playing.id}\r\n          />\r\n          <Carousel.Caption>\r\n            <h3>{now_playing.title}</h3>\r\n            <p>{now_playing.overview}</p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n      ))}\r\n    </Carousel>\r\n  );\r\n};\r\n","import { useEffect, useState, useRef } from \"react\";\r\n\r\nexport const useFetch = (url) => {\r\n  const isMounted = useRef(true); //es para hacer la referencia cuando el componente esta vivo o sigue mosntado\r\n  const [state, setstate] = useState({\r\n    data: null,\r\n    loading: true,\r\n    error: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setstate({ data: null, loading: true, error: null });\r\n    fetch(url)\r\n      .then((resp) => resp.json())\r\n      .then((data) => {\r\n        if (isMounted.current) {\r\n          setstate({\r\n            loading: false,\r\n            error: false,\r\n            data,\r\n          });\r\n        } else {\r\n          console.log(\"Setstate no se llamo\");\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }, [url]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Modal } from \"antd\";\r\nimport ReactPlayer from \"react-player\";\r\nimport \"./ModalVid.scss\";\r\n\r\nexport function ModalVideo({ videoKey, isOpen, close }) {\r\n  //isOpen =es el estado del modal si esta abierto o cerrado\r\n\r\n  const [urlVideo, setUrlVideo] = useState(null);\r\n  // <Player autoPlay={isOpen} player={isOpen} src={urlVideo} />\r\n  useEffect(() => {\r\n    setUrlVideo(`https://youtu.be/${videoKey}`);\r\n  }, [videoKey]); // DE LAS VARIABLES QUE SE VAN A EJECUTAR SE HARA QUE EL USEEFECT SE VUELVA A EJECUTAR, si alguna de\r\n  //esas dos variables sufre un cambio el useEffect se actualizara\r\n\r\n  return (\r\n    <Modal\r\n      className=\"modal-video\"\r\n      visible={isOpen}\r\n      centered\r\n      onCancel={close}\r\n      footer={false}\r\n    >\r\n      <ReactPlayer url={urlVideo} playing={isOpen} controls={isOpen} />\r\n    </Modal>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\n\r\nimport { Modal } from \"antd\";\r\nimport { ModalVideo } from \"./ModalVideo\";\r\nimport { Alert } from \"react-bootstrap\";\r\nexport const RenderVideo = ({ isOpen, close, url }) => {\r\n  const { data: videoMovie, loading } = useFetch(url);\r\n  const { results } = !!videoMovie && videoMovie;\r\n\r\n  const renderVideoFunction = (results, isOpen, close) => {\r\n    if (results) {\r\n      if (results.length > 0) {\r\n        return (\r\n          <>\r\n            <ModalVideo\r\n              videoKey={results[0].key}\r\n              videoPlatform={results[0].site}\r\n              isOpen={isOpen}\r\n              close={close}\r\n            />\r\n          </>\r\n        );\r\n      } else {\r\n        console.log(\"otierne\");\r\n        return (\r\n          <>\r\n            <Modal centered visible={isOpen} onCancel={close} onOk={close}>\r\n              <Alert variant=\"danger\">Trailer no Disponible</Alert>\r\n            </Modal>\r\n          </>\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <div></div>\r\n      ) : (\r\n        <div>{renderVideoFunction(results, isOpen, close)}</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Modal } from \"antd\";\r\n\r\nimport \"./ModalOverview.scss\";\r\nexport const ModalOverview = ({\r\n  modalOverview,\r\n  isCloseModalOverview,\r\n  infoMovie,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <Modal\r\n        visible={modalOverview}\r\n        centered\r\n        onCancel={isCloseModalOverview}\r\n        footer={false}\r\n      >\r\n        <h3>{infoMovie?.title}</h3>\r\n        <h3>{infoMovie?.name}</h3>\r\n\r\n        <p>{infoMovie.overview}</p>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Row, Col, Button } from \"antd\"; //para armar las filas y columnas\r\n\r\nimport { backdropPath } from \"../../helpers/API\";\r\nimport { RenderVideo } from \"../ModalVideo/RenderVideo\";\r\nimport { Card, Rate } from \"antd\";\r\nimport { ModalOverview } from \"../ModalOverview/ModalOverview\";\r\n\r\nimport \"./ListMovieTV.scss\";\r\nconst { Meta } = Card;\r\nexport const ListMovieTV = ({ list, url, setKeyVideo }) => {\r\n  //const [keyVideo, setKeyVideo] = useState(\"55\");\r\n  const [modalVideo, setModalVideo] = useState(false);\r\n  const [modalOverview, setmodalOverview] = useState(false);\r\n\r\n  //const url = `${URL_API}/movie/${keyVideo}/videos?api_key=${API}&language=en-US`;\r\n  const [infoMovie, setInfoMovie] = useState({\r\n    title: \"\",\r\n    overview: \"\",\r\n  });\r\n\r\n  console.log(list);\r\n\r\n  const getKeyVideo = (id_video) => {\r\n    setKeyVideo(id_video);\r\n    setModalVideo(true);\r\n  };\r\n\r\n  const isCloseModalOverview = () => {\r\n    setmodalOverview(false);\r\n  };\r\n  const isOpenModalOverview = (title, overview) => {\r\n    setInfoMovie({\r\n      title,\r\n      overview,\r\n    });\r\n    setmodalOverview(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"box-card-list\">\r\n      <Row>\r\n        {list.map((lists) => (\r\n          <Col span={4} key={lists.id} className=\"card-list-colum\">\r\n            <Card\r\n              className=\"card-list\"\r\n              hoverable\r\n              style={{ width: 220 }}\r\n              cover={\r\n                <img\r\n                  alt=\"example\"\r\n                  src={`${backdropPath}${lists.backdrop_path}`}\r\n                  onClick={() => getKeyVideo(lists.id)}\r\n                />\r\n              }\r\n            >\r\n              {lists.title ? (\r\n                <>\r\n                  <Meta\r\n                    title={lists.title}\r\n                    description={lists.overview.substring(0, 150) + \"...\"}\r\n                  />\r\n\r\n                  <br />\r\n                  <center>\r\n                    <Button\r\n                      onClick={() =>\r\n                        isOpenModalOverview(lists.title, lists.overview)\r\n                      }\r\n                      className=\"text-center\"\r\n                      variant=\"light\"\r\n                    >\r\n                      More...\r\n                    </Button>\r\n                  </center>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Meta\r\n                    title={lists.name}\r\n                    description={lists.overview.substring(0, 150) + \"...\"}\r\n                  />\r\n\r\n                  <br />\r\n                  <center>\r\n                    <Button\r\n                      onClick={() =>\r\n                        isOpenModalOverview(lists.name, lists.overview)\r\n                      }\r\n                      className=\"text-center\"\r\n                      variant=\"light\"\r\n                    >\r\n                      More...\r\n                    </Button>\r\n                  </center>\r\n                </>\r\n              )}\r\n\r\n              <ModalOverview\r\n                modalOverview={modalOverview}\r\n                isCloseModalOverview={isCloseModalOverview}\r\n                infoMovie={infoMovie}\r\n              />\r\n              <hr />\r\n\r\n              <p className=\"text-center\">{lists.release_date}</p>\r\n              <Rate\r\n                allowHalf\r\n                defaultValue={lists.vote_average}\r\n                count={10}\r\n                disabled\r\n              />\r\n            </Card>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n\r\n      <RenderVideo\r\n        isOpen={modalVideo}\r\n        close={() => setModalVideo(false)}\r\n        url={url}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { CarouselsApp } from \"../components/CarouselsApp/CarouselsApp\";\r\nimport { useFetch } from \"../hooks/useFetch\";\r\nimport { URL_API, API } from \"../helpers/API\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { ListMovieTV } from \"../components/ListMovieTV/ListMovieTV\";\r\n\r\nimport \"./styles.scss\";\r\nexport const Home = ({ pageTopRated }) => {\r\n  const [keyVideo, setKeyVideo] = useState(\"55\");\r\n\r\n  //Ultimos estrenos para carousel\r\n  const url = `${URL_API}/movie/now_playing?api_key=${API}&language=es-ES&page=1`;\r\n  const { data, loading } = useFetch(url);\r\n  const { results } = !!data && data;\r\n\r\n  //lista de top peliculas\r\n\r\n  const urlTopRated = `${URL_API}/movie/top_rated?api_key=${API}&language=es-Es&page=${pageTopRated}`;\r\n  const { data: dataTopRate, loading: loadingTopRated } = useFetch(urlTopRated);\r\n  const { results: TopRated } = !!dataTopRate && dataTopRate;\r\n\r\n  const url_video = `${URL_API}/movie/${keyVideo}/videos?api_key=${API}&language=en-US`;\r\n\r\n  return (\r\n    <>\r\n      {loading ? <h1>loafding</h1> : <CarouselsApp results={results} />}\r\n\r\n      {loadingTopRated ? (\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n      ) : (\r\n        <>\r\n          <h1 className=\"text-center\">Top Rated</h1>\r\n          <br />\r\n          <ListMovieTV\r\n            list={TopRated}\r\n            url={url_video}\r\n            setKeyVideo={setKeyVideo}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { URL_API, API } from \"../helpers/API\";\r\nimport { useFetch } from \"../hooks/useFetch\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { ListMovieTV } from \"../components/ListMovieTV/ListMovieTV\";\r\n\r\nimport \"./styles.scss\";\r\nexport const TopRatedTV = ({ pagination }) => {\r\n  const [keyVideo, setKeyVideo] = useState(\"55\");\r\n\r\n  const url = `${URL_API}/tv/top_rated?api_key=${API}&language=es-ES&page=${pagination}`;\r\n  const url_video = `${URL_API}/tv/${keyVideo}/videos?api_key=${API}&language=en-US`;\r\n\r\n  const { data, loading } = useFetch(url);\r\n  const { results } = !!data && data;\r\n\r\n  //total de paginas\r\n  //const urlUpcomingPages = `${URL_API}/movie/upcoming?api_key=${API}&language=es-ES&page=1`;\r\n  //const { data: dataPage } = useFetch(urlUpcomingPages);\r\n  //const { total_pages } = !!dataPage && dataPage;\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n      ) : (\r\n        <>\r\n          <h1 className=\"text-center\">Top rated</h1>\r\n          <ListMovieTV\r\n            list={results}\r\n            url={url_video}\r\n            setKeyVideo={setKeyVideo}\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { URL_API, API } from \"../helpers/API\";\r\nimport { useFetch } from \"../hooks/useFetch\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { ListMovieTV } from \"../components/ListMovieTV/ListMovieTV\";\r\nimport \"./styles.scss\";\r\nexport const PopularTV = ({ pagination }) => {\r\n  const [keyVideo, setKeyVideo] = useState(\"55\");\r\n\r\n  const url_video = `${URL_API}/tv/${keyVideo}/videos?api_key=${API}&language=en-US`;\r\n\r\n  const url = `${URL_API}/tv/popular?api_key=${API}&language=es-ES&page=${pagination}`;\r\n  const { data, loading } = useFetch(url);\r\n  const { results } = !!data && data;\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n      ) : (\r\n        <>\r\n          <h1 className=\"text-center\">popular</h1>\r\n          <ListMovieTV\r\n            list={results}\r\n            url={url_video}\r\n            setKeyVideo={setKeyVideo}\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { URL_API, API } from \"../helpers/API\";\r\nimport { useFetch } from \"../hooks/useFetch\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { ListMovieTV } from \"../components/ListMovieTV/ListMovieTV\";\r\n\r\nimport \"./styles.scss\";\r\nexport const UpcomingMovie = ({ pagination }) => {\r\n  const [keyVideo, setKeyVideo] = useState(\"55\");\r\n\r\n  const urlUpcoming = `${URL_API}/movie/upcoming?api_key=${API}&language=es-ES&page=${pagination}`;\r\n  const { data, loading } = useFetch(urlUpcoming);\r\n  const { results } = !!data && data;\r\n\r\n  const url_video = `${URL_API}/movie/${keyVideo}/videos?api_key=${API}&language=en-US`;\r\n\r\n  //total de paginas\r\n  //const urlUpcomingPages = `${URL_API}/movie/upcoming?api_key=${API}&language=es-ES&page=1`;\r\n  //const { data: dataPage } = useFetch(urlUpcomingPages);\r\n  //const { total_pages } = !!dataPage && dataPage;\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n      ) : (\r\n        <>\r\n          <h1 className=\"text-center\">upcoming</h1>\r\n          <br />\r\n          <ListMovieTV\r\n            list={results}\r\n            url={url_video}\r\n            setKeyVideo={setKeyVideo}\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\nimport { Layout } from \"antd\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { MenuTop } from \"./components/MenuTop/MenuTop\";\nimport { Pagination } from \"antd\";\n\nimport { Home } from \"./Pages/home\";\nimport { URL_API, API } from \"./helpers/API\";\nimport { useFetch } from \"./hooks/useFetch\";\n\nimport { TopRatedTV } from \"./Pages/topRatedTV\";\nimport { PopularTV } from \"./Pages/populartv\";\nimport { UpcomingMovie } from \"./Pages/upcomingMovie\";\n\nimport \"./MovieApp.scss\";\nfunction MovieApp() {\n  const { Header, Content } = Layout;\n  const [pageTopRated, setPageTopRated] = useState(1); //contador de paginas\n\n  const url = `${URL_API}/movie/top_rated?api_key=${API}&language=es-Es&page=1`;\n  const { data } = useFetch(url);\n  const { total_pages: total_pages_topRates } = !!data && data;\n\n  const urlUpcoming = `${URL_API}/movie/upcoming?api_key=${API}&language=es-ES&page=1`;\n  const { data: dataUpcoming } = useFetch(urlUpcoming);\n  const { total_pages: total_pages_upcoming } = !!dataUpcoming && dataUpcoming;\n\n  const urlTopRatedTV = `${URL_API}/tv/top_rated?api_key=${API}&language=es-ES&page=1`;\n  const { data: dataTopRatedTV } = useFetch(urlTopRatedTV);\n  const { total_pages: total_pages_top_tv } =\n    !!dataTopRatedTV && dataTopRatedTV;\n\n  const urlPopularTV = `${URL_API}/tv/popular?api_key=${API}&language=es-ES&page=1`;\n  const { data: dataPopularTV } = useFetch(urlPopularTV);\n  const { total_pages: total_popular_tv } = !!dataPopularTV && dataPopularTV;\n\n  const [pagination, setpagination] = useState(1);\n\n  const onChange = (e) => {\n    setPageTopRated(e); //pagina actual\n  };\n\n  //carga las paginas totlaes del home que seria el top_rated\n  useEffect(() => {\n    setpagination(total_pages_topRates); //totoal de apginas\n  }, [total_pages_topRates]);\n\n  console.log(\"totla:\", total_pages_topRates);\n\n  return (\n    <Layout>\n      <Router>\n        <Header style={{ zIndex: 1 }}>\n          <MenuTop\n            setPageTopRated={setPageTopRated}\n            setpagination={setpagination}\n            total_pages_topRates={total_pages_topRates}\n            total_pages_upcoming={total_pages_upcoming}\n            total_pages_top_tv={total_pages_top_tv}\n            total_popular_tv={total_popular_tv}\n          />\n        </Header>\n\n        <Content>\n          <Route path=\"/\" exact={true}>\n            <Home\n              pageTopRated={pageTopRated}\n              setPageTopRated={setPageTopRated}\n            />\n          </Route>\n          <Switch>\n            <Route path=\"/upcomingMovie\" exact={true}>\n              <UpcomingMovie pagination={pageTopRated} />\n            </Route>\n\n            <Route path=\"/topRatedTV\" exact={true}>\n              <TopRatedTV pagination={pageTopRated} />\n            </Route>\n\n            <Route path=\"/popularTV\" exact={true}>\n              <PopularTV pagination={pageTopRated} />\n            </Route>\n            <Route path=\"\" exact={true}></Route>\n\n            <Route path=\"\" exact={true}></Route>\n\n            <Route path=\"*\"></Route>\n          </Switch>\n        </Content>\n        <Pagination\n          className=\"pagination\"\n          onChange={onChange}\n          defaultCurrent={1}\n          total={pagination}\n          current={pageTopRated}\n          defaultPageSize={pagination}\n        />\n      </Router>\n    </Layout>\n  );\n}\n\nexport default MovieApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport MovieApp from \"./MovieApp\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport \"antd/dist/antd.css\"; // or 'antd/dist/antd.less'\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <MovieApp />,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}